@use "colors";
@use "functions";
@use "typography";
@use "mixins";
@use "sass:meta";
@use "sass:map";

%themed-bg {
  &.theme {
    @each $theme, $value in colors.$ui-themes {
      &--#{$theme} {
        background-color: map.get($value, primary);
      }
    }
  }
}

%basic-text {
  line-height: 1.5;
  border-radius: functions.em(5);
  position: relative;
  padding: functions.em(1);
  font-size: functions.em(typography.$default-text-font-size);
}

%themed-text {
  &.theme {
    @each $theme, $value in colors.$ui-themes {
      &--#{$theme} {
        color: map.get($value, text);
      }
    }
  }
  &--strong {
    &.theme {
      @each $theme, $value in colors.$ui-themes {
        &--#{$theme} {
          @include mixins.word-button-colors(
            map.get($value, secondary),
            map.get($value, text--secondary)
          );
        }
      }
    }
  }
  &--stronger {
    &.theme {
      @each $theme, $value in colors.$ui-themes {
        &--#{$theme} {
          @include mixins.word-button-colors(
            map.get($value, accent),
            map.get($value, text--accent)
          );
        }
      }
    }
  }
}

%border--dotted {
  &.theme {
    @each $theme, $value in colors.$ui-themes {
      &--#{$theme} {
        border: functions.em(0.75) dotted map.get($value, secondary);
      }
    }
  }
}

%border--strong {
  &.theme {
    @each $theme, $value in colors.$ui-themes {
      &--#{$theme} {
        border: functions.em(0.75) solid map.get($value, secondary);
      }
    }
  }
  &--left {
    &.theme {
      @each $theme, $value in colors.$ui-themes {
        &--#{$theme} {
          border-left: functions.em(0.75) solid map.get($value, secondary);
        }
      }
    }
  }
  &--right {
    &.theme {
      @each $theme, $value in colors.$ui-themes {
        &--#{$theme} {
          border-right: functions.em(0.75) solid map.get($value, secondary);
        }
      }
    }
  }
  &--top {
    &.theme {
      @each $theme, $value in colors.$ui-themes {
        &--#{$theme} {
          border-top: functions.em(0.75) solid map.get($value, secondary);
        }
      }
    }
  }
  &--bottom {
    &.theme {
      @each $theme, $value in colors.$ui-themes {
        &--#{$theme} {
          border-bottom: functions.em(0.75) solid map.get($value, secondary);
        }
      }
    }
  }
}

%hover-shared {
  cursor: pointer;
}

// &:hover {
//     @extend %hover-shared;
// }
